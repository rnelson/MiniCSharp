<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>MiniCSharp: /Users/rnelson/Documents/School/csc/446-compiler_construction/MiniCSharp/Globals.cs Source File</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.4.6 -->
<div class="tabs">
  <ul>
    <li><a href="main.htm"><span>Main&nbsp;Page</span></a></li>
    <li><a href="namespaces.htm"><span>Namespaces</span></a></li>
    <li><a href="classes.htm"><span>Classes</span></a></li>
    <li id="current"><a href="files.htm"><span>Files</span></a></li>
  </ul></div>
<h1>/Users/rnelson/Documents/School/csc/446-compiler_construction/MiniCSharp/Globals.cs</h1><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">/* $Id$</span>
<a name="l00002"></a>00002 <span class="comment"> * Ross Nelson</span>
<a name="l00003"></a>00003 <span class="comment"> * Compiler Construction (CSC 446)</span>
<a name="l00004"></a>00004 <span class="comment"> * MiniCSharp/Globals</span>
<a name="l00005"></a>00005 <span class="comment"> */</span>
<a name="l00006"></a>00006 
<a name="l00007"></a>00007 <span class="preprocessor">#region Using declarations</span>
<a name="l00008"></a>00008 <span class="preprocessor"></span><span class="keyword">using</span> System;
<a name="l00009"></a>00009 <span class="keyword">using</span> System.Text;
<a name="l00010"></a>00010 <span class="keyword">using</span> System.Text.RegularExpressions;
<a name="l00011"></a>00011 <span class="keyword">using</span> nsClearConsole;
<a name="l00012"></a>00012 <span class="preprocessor">#endregion</span>
<a name="l00013"></a>00013 <span class="preprocessor"></span>
<a name="l00014"></a>00014 <span class="keyword">namespace </span>MiniCSharp
<a name="l00015"></a>00015 {
<a name="l00016"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm">00016</a>         <span class="keyword">public</span> <span class="keyword">class </span><a class="code" href="class_mini_c_sharp_1_1_globals.htm">Globals</a>
<a name="l00017"></a>00017         {
<a name="l00018"></a>00018                 <span class="comment">/* "global" variables for Program.cs */</span>
<a name="l00019"></a>00019                 <span class="comment">// none</span>
<a name="l00020"></a>00020 
<a name="l00021"></a>00021                 <span class="comment">/* "global" variables for Lexical.cs */</span>
<a name="l00022"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#6b505385ca72a95dec284ad09ba6b3cf">00022</a>                 <span class="keyword">public</span> <span class="keyword">static</span> string <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6b505385ca72a95dec284ad09ba6b3cf">lexeme</a>;                            <span class="comment">/* the lexeme GetNextToken() finds */</span>
<a name="l00023"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#68955f447b6201ac5e5c9dfcf29d197b">00023</a>                 <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="class_mini_c_sharp_1_1_globals.htm#68955f447b6201ac5e5c9dfcf29d197b">value</a>;                                        <span class="comment">/* integer value */</span>
<a name="l00024"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#404fad2fe3612198e31b89e312076c7c">00024</a>                 <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">double</span> <a class="code" href="class_mini_c_sharp_1_1_globals.htm#404fad2fe3612198e31b89e312076c7c">valueF</a>;                            <span class="comment">/* floating point value */</span>
<a name="l00025"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#2c41677abbd4a8aa3210074573bdfe9c">00025</a>                 <span class="keyword">public</span> <span class="keyword">static</span> string <a class="code" href="class_mini_c_sharp_1_1_globals.htm#2c41677abbd4a8aa3210074573bdfe9c">literal</a>;                           <span class="comment">/* a string literal */</span>
<a name="l00026"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#06e54d07d72ab8bc107a0dd13df9b5a3">00026</a>                 <span class="keyword">public</span> <span class="keyword">const</span> <span class="keywordtype">char</span> <a class="code" href="class_mini_c_sharp_1_1_globals.htm#06e54d07d72ab8bc107a0dd13df9b5a3">eof</a> = '\uffff';                       <span class="comment">/* EOF in C#: ^E --- ???*/</span>
<a name="l00027"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">00027</a>                 <span class="keyword">public</span> <span class="keyword">static</span> string [] <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>;          <span class="comment">/* the reserved words list */</span>
<a name="l00028"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">00028</a>                 <span class="keyword">public</span> <span class="keyword">static</span> string [] <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>;                         <span class="comment">/* textual representation of tokens */</span>
<a name="l00029"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#08c2f658afc93d95391d54cd0190a6e9">00029</a>                 <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="class_mini_c_sharp_1_1_globals.htm#08c2f658afc93d95391d54cd0190a6e9">linecount</a>;                            <span class="comment">/* the number of lines printed to the screen */</span>
<a name="l00030"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#1944614c762c9e9ce778d0ea10344a75">00030</a>                 <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="class_mini_c_sharp_1_1_globals.htm#1944614c762c9e9ce778d0ea10344a75">curLine</a>;                                      <span class="comment">/* the current line number */</span>
<a name="l00031"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#b54f58c243baa375f282bbf5bad946a0">00031</a>                 <span class="keyword">public</span> <span class="keyword">static</span> string <a class="code" href="class_mini_c_sharp_1_1_globals.htm#b54f58c243baa375f282bbf5bad946a0">filename</a>;                          <span class="comment">/* the filename */</span>
<a name="l00032"></a>00032                 
<a name="l00033"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#f2eabc3e33677ba0e71c0fe0827c9506">00033</a>                 <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">int</span> <a class="code" href="class_mini_c_sharp_1_1_globals.htm#f2eabc3e33677ba0e71c0fe0827c9506">depth</a>;                                        <span class="comment">/* the depth we're at */</span>
<a name="l00034"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#95f42c1191831dafcd107f3dd15266d0">00034</a>                 <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="class_mini_c_sharp_1_1_hash_table.htm">HashTable</a> <a class="code" href="class_mini_c_sharp_1_1_globals.htm#95f42c1191831dafcd107f3dd15266d0">symTab</a>;                         <span class="comment">/* symbol table */</span>
<a name="l00035"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#72b8e68c2213ae443f294142a51ce2f7">00035</a>                 <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="class_mini_c_sharp_1_1_string_table.htm">StringTable</a> <a class="code" href="class_mini_c_sharp_1_1_globals.htm#72b8e68c2213ae443f294142a51ce2f7">strTab</a>;                       <span class="comment">/* string table */</span>
<a name="l00036"></a>00036                 
<a name="l00037"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#65c44a526dc7ae351072970f7df7b21f">00037</a>                 <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="class_mini_c_sharp_1_1_globals.htm#65c44a526dc7ae351072970f7df7b21f">VISUAL</a>;                                      <span class="comment">/* print TAC/asm to the screen? */</span>
<a name="l00038"></a>00038 
<a name="l00039"></a>00039                 <span class="comment">/* Symbol - token type */</span>
<a name="l00040"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#79488e0a8f83ba697d7f401c2108eac7">00040</a>                 <span class="keyword">public</span> <span class="keyword">enum</span> <a class="code" href="class_mini_c_sharp_1_1_globals.htm#79488e0a8f83ba697d7f401c2108eac7">Symbol</a> : ushort
<a name="l00041"></a>00041                 {
<a name="l00042"></a>00042                         _class,                 <span class="comment">/* 'class' token*/</span>
<a name="l00043"></a>00043                         _if,                    <span class="comment">/* 'if' token */</span>
<a name="l00044"></a>00044                         _new,                   <span class="comment">/* 'new' token */</span>
<a name="l00045"></a>00045                         _foreach,               <span class="comment">/* 'foreach' token */</span>
<a name="l00046"></a>00046                         _const,                 <span class="comment">/* 'const' token */</span>
<a name="l00047"></a>00047                         _float,                 <span class="comment">/* 'float' token */</span>
<a name="l00048"></a>00048                         _null,                  <span class="comment">/* 'null' token */</span>
<a name="l00049"></a>00049                         _in,                    <span class="comment">/* 'in' token */</span>
<a name="l00050"></a>00050                         _public,                <span class="comment">/* 'public' token */</span>
<a name="l00051"></a>00051                         _private,               <span class="comment">/* 'private' token */</span>
<a name="l00052"></a>00052                         _return,                <span class="comment">/* 'return' token */</span>
<a name="l00053"></a>00053                         _this,                  <span class="comment">/* 'this' token */</span>
<a name="l00054"></a>00054                         _using,                 <span class="comment">/* 'using' token */</span>
<a name="l00055"></a>00055                         _char,                  <span class="comment">/* 'char' token */</span>
<a name="l00056"></a>00056                         _else,                  <span class="comment">/* 'else' token */</span>
<a name="l00057"></a>00057                         _int,                   <span class="comment">/* 'int' token */</span>
<a name="l00058"></a>00058                         _static,                <span class="comment">/* 'static' token */</span>
<a name="l00059"></a>00059                         _namespace,             <span class="comment">/* 'namespace' token */</span>
<a name="l00060"></a>00060                         _void,                  <span class="comment">/* 'void' token */</span>
<a name="l00061"></a>00061                         _ref,                   <span class="comment">/* 'ref' token */</span>
<a name="l00062"></a>00062                         _out,                   <span class="comment">/* 'out' token */</span>
<a name="l00063"></a>00063                         _read,                  <span class="comment">/* 'read' token */</span>
<a name="l00064"></a>00064                         _write,                 <span class="comment">/* 'write' token */</span>
<a name="l00065"></a>00065                         _writeln,               <span class="comment">/* 'writeln' token */</span>
<a name="l00066"></a>00066                         _relop,                 <span class="comment">/* relational operator token */</span>                                 <span class="comment">// &lt; &gt; &lt;= &gt;=</span>
<a name="l00067"></a>00067                         _condop,                <span class="comment">/* conditional operator token */</span>                                <span class="comment">// == !=</span>
<a name="l00068"></a>00068                         _unarynot,              <span class="comment">/* unary not token */</span>                                                   <span class="comment">// !</span>
<a name="l00069"></a>00069                         _addop,                 <span class="comment">/* addition operator token */</span>                                   <span class="comment">// +</span>
<a name="l00070"></a>00070                         _signop,                <span class="comment">/* negation/subtraction operator token */</span>               <span class="comment">// -</span>
<a name="l00071"></a>00071                         _mulop,                 <span class="comment">/* multiplication/division operator token */</span>    <span class="comment">// * /</span>
<a name="l00072"></a>00072                         _assignop,              <span class="comment">/* assignment operator token */</span>                                 <span class="comment">// =</span>
<a name="l00073"></a>00073                         _orop,                  <span class="comment">/* or operator token */</span>                                                 <span class="comment">// ||</span>
<a name="l00074"></a>00074                         _borop,                 <span class="comment">/* binary or operator token */</span>                                  <span class="comment">// |</span>
<a name="l00075"></a>00075                         _andop,                 <span class="comment">/* and operator token */</span>                                                <span class="comment">// &amp;&amp;</span>
<a name="l00076"></a>00076                         _bandop,                <span class="comment">/* binary and operator token */</span>                                 <span class="comment">// &amp;</span>
<a name="l00077"></a>00077                         _lparen,                <span class="comment">/* left parenthesis token */</span>                                    <span class="comment">// (</span>
<a name="l00078"></a>00078                         _rparen,                <span class="comment">/* right parenthesis token */</span>                                   <span class="comment">// )</span>
<a name="l00079"></a>00079                         _lbrace,                <span class="comment">/* left french brace token */</span>                                   <span class="comment">// {</span>
<a name="l00080"></a>00080                         _rbrace,                <span class="comment">/* right french brace token */</span>                                  <span class="comment">// }</span>
<a name="l00081"></a>00081                         _lbracket,              <span class="comment">/* left bracket */</span>                                                              <span class="comment">// [</span>
<a name="l00082"></a>00082                         _rbracket,              <span class="comment">/* right bracket */</span>                                                             <span class="comment">// ]</span>
<a name="l00083"></a>00083                         _comma,                 <span class="comment">/* comma token */</span>                                                               <span class="comment">// ,</span>
<a name="l00084"></a>00084                         _colon,                 <span class="comment">/* colon token */</span>                                                               <span class="comment">// :</span>
<a name="l00085"></a>00085                         _semicolon,             <span class="comment">/* semicolon token */</span>                                                   <span class="comment">// ;</span>
<a name="l00086"></a>00086                         _period,                <span class="comment">/* period token */</span>                                                              <span class="comment">// .</span>
<a name="l00087"></a>00087                         _quote,                 <span class="comment">/* single quote token */</span>                                                <span class="comment">// '</span>
<a name="l00088"></a>00088                         _dquote,                <span class="comment">/* double quote token */</span>                                                <span class="comment">// "</span>
<a name="l00089"></a>00089                         _number,                <span class="comment">/* numerical value token */</span>
<a name="l00090"></a>00090                         _numfloat,              <span class="comment">/* floating point value token */</span>
<a name="l00091"></a>00091                         _literal,               <span class="comment">/* literal characters/strings */</span>
<a name="l00092"></a>00092                         _eof,                   <span class="comment">/* end of file token */</span>
<a name="l00093"></a>00093                         _identifier,    <span class="comment">/* identifier token */</span>
<a name="l00094"></a>00094                         _constructor,   <span class="comment">/* constructors */</span>
<a name="l00095"></a>00095                         _comment,               <span class="comment">/* a comment - ignore it */</span>
<a name="l00096"></a>00096                         _unknown,               <span class="comment">/* unknown token */</span>
<a name="l00097"></a>00097                 }
<a name="l00098"></a>00098 
<a name="l00100"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#396e11871d57484dc409641f8265849e">00100</a>                 <span class="keyword">public</span> <span class="keyword">static</span> <a class="code" href="class_mini_c_sharp_1_1_globals.htm">Globals</a>.Symbol <a class="code" href="class_mini_c_sharp_1_1_globals.htm#396e11871d57484dc409641f8265849e">token</a>;     <span class="comment">/* token type */</span>
<a name="l00101"></a>00101                 
<a name="l00102"></a>00102                 <span class="comment">/* Wait()</span>
<a name="l00103"></a>00103 <span class="comment">                 * </span>
<a name="l00104"></a>00104 <span class="comment">                 * Method to pause and clear the screen</span>
<a name="l00105"></a>00105 <span class="comment">                 */</span>
<a name="l00106"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#59935e651672f7dd7dd2d76f94a6f16d">00106</a>                 <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="class_mini_c_sharp_1_1_globals.htm#59935e651672f7dd7dd2d76f94a6f16d">Wait</a>(string message)
<a name="l00107"></a>00107                 {
<a name="l00108"></a>00108                         <a class="code" href="classns_clear_console_1_1_clear_console.htm">ClearConsole</a> clrscr = <span class="keyword">new</span> <a class="code" href="classns_clear_console_1_1_clear_console.htm">ClearConsole</a>();
<a name="l00109"></a>00109                         System.Console.WriteLine(message);
<a name="l00110"></a>00110                         System.Console.ReadLine();
<a name="l00111"></a>00111                         clrscr.Clear();
<a name="l00112"></a>00112                 }
<a name="l00113"></a>00113                 
<a name="l00114"></a>00114                 <span class="comment">/* Initialize()</span>
<a name="l00115"></a>00115 <span class="comment">                 * </span>
<a name="l00116"></a>00116 <span class="comment">                 * This method *MUST* be called before Globals is used, it sets</span>
<a name="l00117"></a>00117 <span class="comment">                 * anything up for the Globals class that has to be done at runtime.</span>
<a name="l00118"></a>00118 <span class="comment">                 */</span>
<a name="l00119"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#8eb5e54e9f0c81714b909527873b764b">00119</a>                 <span class="keyword">public</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="class_mini_c_sharp_1_1_globals.htm#8eb5e54e9f0c81714b909527873b764b">Initialize</a>()
<a name="l00120"></a>00120                 {
<a name="l00121"></a>00121                         <span class="keywordtype">int</span> index = 0;
<a name="l00122"></a>00122                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#396e11871d57484dc409641f8265849e">token</a> = <a class="code" href="class_mini_c_sharp_1_1_globals.htm">Globals</a>.<a class="code" href="class_mini_c_sharp_1_1_globals.htm#79488e0a8f83ba697d7f401c2108eac7">Symbol</a>._unknown;
<a name="l00123"></a>00123                         
<a name="l00124"></a>00124                         <span class="comment">/* set the initial line count */</span>
<a name="l00125"></a>00125                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#08c2f658afc93d95391d54cd0190a6e9">linecount</a> = 0;
<a name="l00126"></a>00126                         
<a name="l00127"></a>00127                         <span class="comment">/* we've not yet read a line... */</span>
<a name="l00128"></a>00128                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#1944614c762c9e9ce778d0ea10344a75">curLine</a> = 0;
<a name="l00129"></a>00129                         
<a name="l00130"></a>00130                         <span class="comment">/* set our outer depth */</span>
<a name="l00131"></a>00131                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#f2eabc3e33677ba0e71c0fe0827c9506">depth</a> = 0;
<a name="l00132"></a>00132 
<a name="l00133"></a>00133                         <span class="comment">/* create the symbol table */</span>
<a name="l00134"></a>00134                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#95f42c1191831dafcd107f3dd15266d0">symTab</a> = <span class="keyword">new</span> <a class="code" href="class_mini_c_sharp_1_1_hash_table.htm">HashTable</a>();
<a name="l00135"></a>00135                         
<a name="l00136"></a>00136                         <span class="comment">/* create the string table */</span>
<a name="l00137"></a>00137                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#72b8e68c2213ae443f294142a51ce2f7">strTab</a> = <span class="keyword">new</span> <a class="code" href="class_mini_c_sharp_1_1_string_table.htm">StringTable</a>();
<a name="l00138"></a>00138                         
<a name="l00139"></a>00139                         <span class="comment">/* let's be quiet */</span>
<a name="l00140"></a>00140                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#65c44a526dc7ae351072970f7df7b21f">VISUAL</a> = <span class="keyword">false</span>;
<a name="l00141"></a>00141                         
<a name="l00142"></a>00142                         <span class="comment">/* create memory for the reserved words */</span>
<a name="l00143"></a>00143                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a> = <span class="keyword">new</span> string[24];
<a name="l00144"></a>00144                         
<a name="l00145"></a>00145                         <span class="comment">/* set all of the reserved words */</span>
<a name="l00146"></a>00146                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"class"</span>;
<a name="l00147"></a>00147                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"if"</span>;
<a name="l00148"></a>00148                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"new"</span>;
<a name="l00149"></a>00149                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"foreach"</span>;
<a name="l00150"></a>00150                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"const"</span>;
<a name="l00151"></a>00151                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"float"</span>;
<a name="l00152"></a>00152                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"null"</span>;
<a name="l00153"></a>00153                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"in"</span>;
<a name="l00154"></a>00154                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"public"</span>;
<a name="l00155"></a>00155                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"private"</span>;
<a name="l00156"></a>00156                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"return"</span>;
<a name="l00157"></a>00157                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"this"</span>;
<a name="l00158"></a>00158                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"using"</span>;
<a name="l00159"></a>00159                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"char"</span>;
<a name="l00160"></a>00160                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"else"</span>;
<a name="l00161"></a>00161                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"int"</span>;
<a name="l00162"></a>00162                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"static"</span>;
<a name="l00163"></a>00163                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"namespace"</span>;
<a name="l00164"></a>00164                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"void"</span>;
<a name="l00165"></a>00165                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"ref"</span>;
<a name="l00166"></a>00166                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"out"</span>;
<a name="l00167"></a>00167                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"read"</span>;
<a name="l00168"></a>00168                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"write"</span>;
<a name="l00169"></a>00169                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#6e8c77916b8100c5af72f35a6df31311">ReservedWords</a>[index++] = <span class="stringliteral">"writeln"</span>;
<a name="l00170"></a>00170                         
<a name="l00171"></a>00171                         <span class="comment">/* do the same for Tokens */</span>
<a name="l00172"></a>00172                         index = 0;
<a name="l00173"></a>00173                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a> = <span class="keyword">new</span> string[55];
<a name="l00174"></a>00174                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"class"</span>;
<a name="l00175"></a>00175                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"if"</span>;
<a name="l00176"></a>00176                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"new"</span>;
<a name="l00177"></a>00177                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"foreach"</span>;
<a name="l00178"></a>00178                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"const"</span>;
<a name="l00179"></a>00179                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"float"</span>;
<a name="l00180"></a>00180                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"null"</span>;
<a name="l00181"></a>00181                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"in"</span>;
<a name="l00182"></a>00182                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"public"</span>;
<a name="l00183"></a>00183                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"private"</span>;
<a name="l00184"></a>00184                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"return"</span>;
<a name="l00185"></a>00185                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"this"</span>;
<a name="l00186"></a>00186                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"using"</span>;
<a name="l00187"></a>00187                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"char"</span>;
<a name="l00188"></a>00188                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"else"</span>;
<a name="l00189"></a>00189                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"int"</span>;
<a name="l00190"></a>00190                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"static"</span>;
<a name="l00191"></a>00191                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"namespace"</span>;
<a name="l00192"></a>00192                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"void"</span>;
<a name="l00193"></a>00193                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"ref"</span>;
<a name="l00194"></a>00194                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"out"</span>;
<a name="l00195"></a>00195                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"read"</span>;
<a name="l00196"></a>00196                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"write"</span>;
<a name="l00197"></a>00197                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"writeln"</span>;
<a name="l00198"></a>00198                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"relop"</span>;
<a name="l00199"></a>00199                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"condop"</span>;
<a name="l00200"></a>00200                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"unarynot"</span>;
<a name="l00201"></a>00201                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"addop"</span>;
<a name="l00202"></a>00202                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"signop"</span>;
<a name="l00203"></a>00203                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"mulop"</span>;
<a name="l00204"></a>00204                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"assignop"</span>;
<a name="l00205"></a>00205                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"orop"</span>;
<a name="l00206"></a>00206                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"borop"</span>;
<a name="l00207"></a>00207                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"andop"</span>;
<a name="l00208"></a>00208                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"bandorop"</span>;
<a name="l00209"></a>00209                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"lparen"</span>;
<a name="l00210"></a>00210                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"rparen"</span>;
<a name="l00211"></a>00211                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"lbrace"</span>;
<a name="l00212"></a>00212                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"rbrace"</span>;
<a name="l00213"></a>00213                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"lbracket"</span>;
<a name="l00214"></a>00214                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"rbracket"</span>;
<a name="l00215"></a>00215                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"comma"</span>;
<a name="l00216"></a>00216                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"colon"</span>;
<a name="l00217"></a>00217                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"semicolon"</span>;
<a name="l00218"></a>00218                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"period"</span>;
<a name="l00219"></a>00219                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"quote"</span>;
<a name="l00220"></a>00220                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"dquote"</span>;
<a name="l00221"></a>00221                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"number"</span>;
<a name="l00222"></a>00222                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"numfloat"</span>;
<a name="l00223"></a>00223                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"literal"</span>;
<a name="l00224"></a>00224                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"eof"</span>;
<a name="l00225"></a>00225                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"identifier"</span>;
<a name="l00226"></a>00226                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"constructor"</span>;
<a name="l00227"></a>00227                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"comment"</span>;
<a name="l00228"></a>00228                         <a class="code" href="class_mini_c_sharp_1_1_globals.htm#3051f922c2fd5f74a23b63fbc636d8dd">Tokens</a>[index++] = <span class="stringliteral">"unknown"</span>;
<a name="l00229"></a>00229                 }
<a name="l00230"></a>00230 
<a name="l00231"></a><a class="code" href="class_mini_c_sharp_1_1_globals.htm#44a209bb24ff713c53eda38036d13af8">00231</a>                 <span class="keyword">public</span> <span class="keyword">static</span> string <a class="code" href="class_mini_c_sharp_1_1_globals.htm#44a209bb24ff713c53eda38036d13af8">GetFilename</a>(string FullName, <span class="keywordtype">char</span> ParseChar)
<a name="l00232"></a>00232                 {
<a name="l00233"></a>00233                         <span class="keywordtype">int</span> idx;                        <span class="comment">// location of ParseChar</span>
<a name="l00234"></a>00234                         string shortname;       <span class="comment">// return string</span>
<a name="l00235"></a>00235                 
<a name="l00236"></a>00236                         <span class="comment">// initialize our variables</span>
<a name="l00237"></a>00237                         idx = 0;
<a name="l00238"></a>00238                         shortname = <span class="stringliteral">""</span>;
<a name="l00239"></a>00239                 
<a name="l00240"></a>00240                         <span class="comment">// find the last occurence of ParseChar</span>
<a name="l00241"></a>00241                         idx = FullName.LastIndexOf(ParseChar);
<a name="l00242"></a>00242                 
<a name="l00243"></a>00243                         <span class="comment">// grab from 0 to idx-1</span>
<a name="l00244"></a>00244                         shortname = FullName.Substring(0, idx);
<a name="l00245"></a>00245         
<a name="l00246"></a>00246                         <span class="comment">// done!</span>
<a name="l00247"></a>00247                         <span class="keywordflow">return</span> shortname;
<a name="l00248"></a>00248                 }
<a name="l00249"></a>00249         }
<a name="l00250"></a>00250 }
</pre></div><hr size="1"><address style="align: right;"><small>Generated on Sun May 14 16:08:27 2006 for MiniCSharp by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.4.6 </small></address>
</body>
</html>
